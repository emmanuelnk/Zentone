{"dependencies":[{"name":"/Users/terminallychill/Sites/zentone/package.json","includedInParent":true,"mtime":1524394439205},{"name":"/Users/terminallychill/Sites/zentone/node_modules/oauth/package.json","includedInParent":true,"mtime":1483608200000},{"name":"querystring","loc":{"line":1,"column":25}},{"name":"crypto","loc":{"line":2,"column":20}},{"name":"https","loc":{"line":3,"column":19}},{"name":"http","loc":{"line":4,"column":18}},{"name":"url","loc":{"line":5,"column":17}},{"name":"./_utils","loc":{"line":6,"column":24}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar querystring= require('querystring'),\n    crypto= require('crypto'),\n    https= require('https'),\n    http= require('http'),\n    URL= require('url'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth2= function(clientId, clientSecret, baseSite, authorizePath, accessTokenPath, customHeaders) {\n  this._clientId= clientId;\n  this._clientSecret= clientSecret;\n  this._baseSite= baseSite;\n  this._authorizeUrl= authorizePath || \"/oauth/authorize\";\n  this._accessTokenUrl= accessTokenPath || \"/oauth/access_token\";\n  this._accessTokenName= \"access_token\";\n  this._authMethod= \"Bearer\";\n  this._customHeaders = customHeaders || {};\n  this._useAuthorizationHeaderForGET= false;\n\n  //our agent\n  this._agent = undefined;\n};\n\n// Allows you to set an agent to use instead of the default HTTP or\n// HTTPS agents. Useful when dealing with your own certificates.\nexports.OAuth2.prototype.setAgent = function(agent) {\n  this._agent = agent;\n};\n\n// This 'hack' method is required for sites that don't use\n// 'access_token' as the name of the access token (for requests).\n// ( http://tools.ietf.org/html/draft-ietf-oauth-v2-16#section-7 )\n// it isn't clear what the correct value should be atm, so allowing\n// for specific (temporary?) override for now.\nexports.OAuth2.prototype.setAccessTokenName= function ( name ) {\n  this._accessTokenName= name;\n}\n\n// Sets the authorization method for Authorization header.\n// e.g. Authorization: Bearer <token>  # \"Bearer\" is the authorization method.\nexports.OAuth2.prototype.setAuthMethod = function ( authMethod ) {\n  this._authMethod = authMethod;\n};\n\n\n// If you use the OAuth2 exposed 'get' method (and don't construct your own _request call )\n// this will specify whether to use an 'Authorize' header instead of passing the access_token as a query parameter\nexports.OAuth2.prototype.useAuthorizationHeaderforGET = function(useIt) {\n  this._useAuthorizationHeaderForGET= useIt;\n}\n\nexports.OAuth2.prototype._getAccessTokenUrl= function() {\n  return this._baseSite + this._accessTokenUrl; /* + \"?\" + querystring.stringify(params); */\n}\n\n// Build the authorization header. In particular, build the part after the colon.\n// e.g. Authorization: Bearer <token>  # Build \"Bearer <token>\"\nexports.OAuth2.prototype.buildAuthHeader= function(token) {\n  return this._authMethod + ' ' + token;\n};\n\nexports.OAuth2.prototype._chooseHttpLibrary= function( parsedUrl ) {\n  var http_library= https;\n  // As this is OAUth2, we *assume* https unless told explicitly otherwise.\n  if( parsedUrl.protocol != \"https:\" ) {\n    http_library= http;\n  }\n  return http_library;\n};\n\nexports.OAuth2.prototype._request= function(method, url, headers, post_body, access_token, callback) {\n\n  var parsedUrl= URL.parse( url, true );\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) {\n    parsedUrl.port= 443;\n  }\n\n  var http_library= this._chooseHttpLibrary( parsedUrl );\n\n\n  var realHeaders= {};\n  for( var key in this._customHeaders ) {\n    realHeaders[key]= this._customHeaders[key];\n  }\n  if( headers ) {\n    for(var key in headers) {\n      realHeaders[key] = headers[key];\n    }\n  }\n  realHeaders['Host']= parsedUrl.host;\n\n  if (!realHeaders['User-Agent']) {\n    realHeaders['User-Agent'] = 'Node-oauth';\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          realHeaders[\"Content-Length\"]= post_body.length;\n      } else {\n          realHeaders[\"Content-Length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      realHeaders[\"Content-length\"]= 0;\n  }\n\n  if( access_token && !('Authorization' in realHeaders)) {\n    if( ! parsedUrl.query ) parsedUrl.query= {};\n    parsedUrl.query[this._accessTokenName]= access_token;\n  }\n\n  var queryStr= querystring.stringify(parsedUrl.query);\n  if( queryStr ) queryStr=  \"?\" + queryStr;\n  var options = {\n    host:parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.pathname + queryStr,\n    method: method,\n    headers: realHeaders\n  };\n\n  this._executeRequest( http_library, options, post_body, callback );\n}\n\nexports.OAuth2.prototype._executeRequest= function( http_library, options, post_body, callback ) {\n  // Some hosts *cough* google appear to close the connection early / send no content-length header\n  // allow this behaviour.\n  var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost(options.host);\n  var callbackCalled= false;\n  function passBackControl( response, result ) {\n    if(!callbackCalled) {\n      callbackCalled=true;\n      if( !(response.statusCode >= 200 && response.statusCode <= 299) && (response.statusCode != 301) && (response.statusCode != 302) ) {\n        callback({ statusCode: response.statusCode, data: result });\n      } else {\n        callback(null, result, response);\n      }\n    }\n  }\n\n  var result= \"\";\n\n  //set the agent on the request options\n  if (this._agent) {\n    options.agent = this._agent;\n  }\n\n  var request = http_library.request(options);\n  request.on('response', function (response) {\n    response.on(\"data\", function (chunk) {\n      result+= chunk\n    });\n    response.on(\"close\", function (err) {\n      if( allowEarlyClose ) {\n        passBackControl( response, result );\n      }\n    });\n    response.addListener(\"end\", function () {\n      passBackControl( response, result );\n    });\n  });\n  request.on('error', function(e) {\n    callbackCalled= true;\n    callback(e);\n  });\n\n  if( (options.method == 'POST' || options.method == 'PUT') && post_body ) {\n     request.write(post_body);\n  }\n  request.end();\n}\n\nexports.OAuth2.prototype.getAuthorizeUrl= function( params ) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  return this._baseSite + this._authorizeUrl + \"?\" + querystring.stringify(params);\n}\n\nexports.OAuth2.prototype.getOAuthAccessToken= function(code, params, callback) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  params['client_secret'] = this._clientSecret;\n  var codeParam = (params.grant_type === 'refresh_token') ? 'refresh_token' : 'code';\n  params[codeParam]= code;\n\n  var post_data= querystring.stringify( params );\n  var post_headers= {\n       'Content-Type': 'application/x-www-form-urlencoded'\n   };\n\n\n  this._request(\"POST\", this._getAccessTokenUrl(), post_headers, post_data, null, function(error, data, response) {\n    if( error )  callback(error);\n    else {\n      var results;\n      try {\n        // As of http://tools.ietf.org/html/draft-ietf-oauth-v2-07\n        // responses should be in JSON\n        results= JSON.parse( data );\n      }\n      catch(e) {\n        // .... However both Facebook + Github currently use rev05 of the spec\n        // and neither seem to specify a content-type correctly in their response headers :(\n        // clients of these services will suffer a *minor* performance cost of the exception\n        // being thrown\n        results= querystring.parse( data );\n      }\n      var access_token= results[\"access_token\"];\n      var refresh_token= results[\"refresh_token\"];\n      delete results[\"refresh_token\"];\n      callback(null, access_token, refresh_token, results); // callback results =-=\n    }\n  });\n}\n\n// Deprecated\nexports.OAuth2.prototype.getProtectedResource= function(url, access_token, callback) {\n  this._request(\"GET\", url, {}, \"\", access_token, callback );\n}\n\nexports.OAuth2.prototype.get= function(url, access_token, callback) {\n  if( this._useAuthorizationHeaderForGET ) {\n    var headers= {'Authorization': this.buildAuthHeader(access_token) }\n    access_token= null;\n  }\n  else {\n    headers= {};\n  }\n  this._request(\"GET\", url, headers, \"\", access_token, callback );\n}\n","map":{"mappings":[{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/oauth/lib/oauth2.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}}],"sources":{"node_modules/oauth/lib/oauth2.js":"var querystring= require('querystring'),\n    crypto= require('crypto'),\n    https= require('https'),\n    http= require('http'),\n    URL= require('url'),\n    OAuthUtils= require('./_utils');\n\nexports.OAuth2= function(clientId, clientSecret, baseSite, authorizePath, accessTokenPath, customHeaders) {\n  this._clientId= clientId;\n  this._clientSecret= clientSecret;\n  this._baseSite= baseSite;\n  this._authorizeUrl= authorizePath || \"/oauth/authorize\";\n  this._accessTokenUrl= accessTokenPath || \"/oauth/access_token\";\n  this._accessTokenName= \"access_token\";\n  this._authMethod= \"Bearer\";\n  this._customHeaders = customHeaders || {};\n  this._useAuthorizationHeaderForGET= false;\n\n  //our agent\n  this._agent = undefined;\n};\n\n// Allows you to set an agent to use instead of the default HTTP or\n// HTTPS agents. Useful when dealing with your own certificates.\nexports.OAuth2.prototype.setAgent = function(agent) {\n  this._agent = agent;\n};\n\n// This 'hack' method is required for sites that don't use\n// 'access_token' as the name of the access token (for requests).\n// ( http://tools.ietf.org/html/draft-ietf-oauth-v2-16#section-7 )\n// it isn't clear what the correct value should be atm, so allowing\n// for specific (temporary?) override for now.\nexports.OAuth2.prototype.setAccessTokenName= function ( name ) {\n  this._accessTokenName= name;\n}\n\n// Sets the authorization method for Authorization header.\n// e.g. Authorization: Bearer <token>  # \"Bearer\" is the authorization method.\nexports.OAuth2.prototype.setAuthMethod = function ( authMethod ) {\n  this._authMethod = authMethod;\n};\n\n\n// If you use the OAuth2 exposed 'get' method (and don't construct your own _request call )\n// this will specify whether to use an 'Authorize' header instead of passing the access_token as a query parameter\nexports.OAuth2.prototype.useAuthorizationHeaderforGET = function(useIt) {\n  this._useAuthorizationHeaderForGET= useIt;\n}\n\nexports.OAuth2.prototype._getAccessTokenUrl= function() {\n  return this._baseSite + this._accessTokenUrl; /* + \"?\" + querystring.stringify(params); */\n}\n\n// Build the authorization header. In particular, build the part after the colon.\n// e.g. Authorization: Bearer <token>  # Build \"Bearer <token>\"\nexports.OAuth2.prototype.buildAuthHeader= function(token) {\n  return this._authMethod + ' ' + token;\n};\n\nexports.OAuth2.prototype._chooseHttpLibrary= function( parsedUrl ) {\n  var http_library= https;\n  // As this is OAUth2, we *assume* https unless told explicitly otherwise.\n  if( parsedUrl.protocol != \"https:\" ) {\n    http_library= http;\n  }\n  return http_library;\n};\n\nexports.OAuth2.prototype._request= function(method, url, headers, post_body, access_token, callback) {\n\n  var parsedUrl= URL.parse( url, true );\n  if( parsedUrl.protocol == \"https:\" && !parsedUrl.port ) {\n    parsedUrl.port= 443;\n  }\n\n  var http_library= this._chooseHttpLibrary( parsedUrl );\n\n\n  var realHeaders= {};\n  for( var key in this._customHeaders ) {\n    realHeaders[key]= this._customHeaders[key];\n  }\n  if( headers ) {\n    for(var key in headers) {\n      realHeaders[key] = headers[key];\n    }\n  }\n  realHeaders['Host']= parsedUrl.host;\n\n  if (!realHeaders['User-Agent']) {\n    realHeaders['User-Agent'] = 'Node-oauth';\n  }\n\n  if( post_body ) {\n      if ( Buffer.isBuffer(post_body) ) {\n          realHeaders[\"Content-Length\"]= post_body.length;\n      } else {\n          realHeaders[\"Content-Length\"]= Buffer.byteLength(post_body);\n      }\n  } else {\n      realHeaders[\"Content-length\"]= 0;\n  }\n\n  if( access_token && !('Authorization' in realHeaders)) {\n    if( ! parsedUrl.query ) parsedUrl.query= {};\n    parsedUrl.query[this._accessTokenName]= access_token;\n  }\n\n  var queryStr= querystring.stringify(parsedUrl.query);\n  if( queryStr ) queryStr=  \"?\" + queryStr;\n  var options = {\n    host:parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.pathname + queryStr,\n    method: method,\n    headers: realHeaders\n  };\n\n  this._executeRequest( http_library, options, post_body, callback );\n}\n\nexports.OAuth2.prototype._executeRequest= function( http_library, options, post_body, callback ) {\n  // Some hosts *cough* google appear to close the connection early / send no content-length header\n  // allow this behaviour.\n  var allowEarlyClose= OAuthUtils.isAnEarlyCloseHost(options.host);\n  var callbackCalled= false;\n  function passBackControl( response, result ) {\n    if(!callbackCalled) {\n      callbackCalled=true;\n      if( !(response.statusCode >= 200 && response.statusCode <= 299) && (response.statusCode != 301) && (response.statusCode != 302) ) {\n        callback({ statusCode: response.statusCode, data: result });\n      } else {\n        callback(null, result, response);\n      }\n    }\n  }\n\n  var result= \"\";\n\n  //set the agent on the request options\n  if (this._agent) {\n    options.agent = this._agent;\n  }\n\n  var request = http_library.request(options);\n  request.on('response', function (response) {\n    response.on(\"data\", function (chunk) {\n      result+= chunk\n    });\n    response.on(\"close\", function (err) {\n      if( allowEarlyClose ) {\n        passBackControl( response, result );\n      }\n    });\n    response.addListener(\"end\", function () {\n      passBackControl( response, result );\n    });\n  });\n  request.on('error', function(e) {\n    callbackCalled= true;\n    callback(e);\n  });\n\n  if( (options.method == 'POST' || options.method == 'PUT') && post_body ) {\n     request.write(post_body);\n  }\n  request.end();\n}\n\nexports.OAuth2.prototype.getAuthorizeUrl= function( params ) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  return this._baseSite + this._authorizeUrl + \"?\" + querystring.stringify(params);\n}\n\nexports.OAuth2.prototype.getOAuthAccessToken= function(code, params, callback) {\n  var params= params || {};\n  params['client_id'] = this._clientId;\n  params['client_secret'] = this._clientSecret;\n  var codeParam = (params.grant_type === 'refresh_token') ? 'refresh_token' : 'code';\n  params[codeParam]= code;\n\n  var post_data= querystring.stringify( params );\n  var post_headers= {\n       'Content-Type': 'application/x-www-form-urlencoded'\n   };\n\n\n  this._request(\"POST\", this._getAccessTokenUrl(), post_headers, post_data, null, function(error, data, response) {\n    if( error )  callback(error);\n    else {\n      var results;\n      try {\n        // As of http://tools.ietf.org/html/draft-ietf-oauth-v2-07\n        // responses should be in JSON\n        results= JSON.parse( data );\n      }\n      catch(e) {\n        // .... However both Facebook + Github currently use rev05 of the spec\n        // and neither seem to specify a content-type correctly in their response headers :(\n        // clients of these services will suffer a *minor* performance cost of the exception\n        // being thrown\n        results= querystring.parse( data );\n      }\n      var access_token= results[\"access_token\"];\n      var refresh_token= results[\"refresh_token\"];\n      delete results[\"refresh_token\"];\n      callback(null, access_token, refresh_token, results); // callback results =-=\n    }\n  });\n}\n\n// Deprecated\nexports.OAuth2.prototype.getProtectedResource= function(url, access_token, callback) {\n  this._request(\"GET\", url, {}, \"\", access_token, callback );\n}\n\nexports.OAuth2.prototype.get= function(url, access_token, callback) {\n  if( this._useAuthorizationHeaderForGET ) {\n    var headers= {'Authorization': this.buildAuthHeader(access_token) }\n    access_token= null;\n  }\n  else {\n    headers= {};\n  }\n  this._request(\"GET\", url, headers, \"\", access_token, callback );\n}\n"},"lineCount":230}},"hash":"238da1f43013a805e31f665f298f83cd","cacheData":{"env":{}}}