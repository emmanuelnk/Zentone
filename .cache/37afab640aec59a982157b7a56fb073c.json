{"dependencies":[{"name":"/Users/terminallychill/Sites/zentone/package.json","includedInParent":true,"mtime":1524394439205},{"name":"/Users/terminallychill/Sites/zentone/node_modules/oauth/package.json","includedInParent":true,"mtime":1483608200000}],"generated":{"js":"/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS 180-1\n * Version 2.2 Copyright Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 1;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"=\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha1(s)    { return rstr2hex(rstr_sha1(str2rstr_utf8(s))); }\nfunction b64_sha1(s)    { return rstr2b64(rstr_sha1(str2rstr_utf8(s))); }\nfunction any_sha1(s, e) { return rstr2any(rstr_sha1(str2rstr_utf8(s)), e); }\nfunction hex_hmac_sha1(k, d)\n  { return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction b64_hmac_sha1(k, d)\n  { return rstr2b64(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction any_hmac_sha1(k, d, e)\n  { return rstr2any(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction sha1_vm_test()\n{\n  return hex_sha1(\"abc\").toLowerCase() == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n}\n\n/*\n * Calculate the SHA1 of a raw string\n */\nfunction rstr_sha1(s)\n{\n  return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data (raw strings)\n */\nfunction rstr_hmac_sha1(key, data)\n{\n  var bkey = rstr2binb(key);\n  if(bkey.length > 16) bkey = binb_sha1(bkey, key.length * 8);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = binb_sha1(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n  return binb2rstr(binb_sha1(opad.concat(hash), 512 + 160));\n}\n\n/*\n * Convert a raw string to a hex string\n */\nfunction rstr2hex(input)\n{\n  try { hexcase } catch(e) { hexcase=0; }\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var output = \"\";\n  var x;\n  for(var i = 0; i < input.length; i++)\n  {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\n           +  hex_tab.charAt( x        & 0x0F);\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to a base-64 string\n */\nfunction rstr2b64(input)\n{\n  try { b64pad } catch(e) { b64pad=''; }\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var output = \"\";\n  var len = input.length;\n  for(var i = 0; i < len; i += 3)\n  {\n    var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n    }\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nfunction rstr2any(input, encoding)\n{\n  var divisor = encoding.length;\n  var remainders = Array();\n  var i, q, x, quotient;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  var dividend = Array(Math.ceil(input.length / 2));\n  for(i = 0; i < dividend.length; i++)\n  {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */\n  while(dividend.length > 0)\n  {\n    quotient = Array();\n    x = 0;\n    for(i = 0; i < dividend.length; i++)\n    {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if(quotient.length > 0 || q > 0)\n        quotient[quotient.length] = q;\n    }\n    remainders[remainders.length] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  var output = \"\";\n  for(i = remainders.length - 1; i >= 0; i--)\n    output += encoding.charAt(remainders[i]);\n\n  /* Append leading zero equivalents */\n  var full_length = Math.ceil(input.length * 8 /\n                                    (Math.log(encoding.length) / Math.log(2)))\n  for(i = output.length; i < full_length; i++)\n    output = encoding[0] + output;\n\n  return output;\n}\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nfunction str2rstr_utf8(input)\n{\n  var output = \"\";\n  var i = -1;\n  var x, y;\n\n  while(++i < input.length)\n  {\n    /* Decode utf-16 surrogate pairs */\n    x = input.charCodeAt(i);\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n    {\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n      i++;\n    }\n\n    /* Encode output as utf-8 */\n    if(x <= 0x7F)\n      output += String.fromCharCode(x);\n    else if(x <= 0x7FF)\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0xFFFF)\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0x1FFFFF)\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                    0x80 | ((x >>> 12) & 0x3F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n  }\n  return output;\n}\n\n/*\n * Encode a string as utf-16\n */\nfunction str2rstr_utf16le(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\n  return output;\n}\n\nfunction str2rstr_utf16be(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                                   input.charCodeAt(i)        & 0xFF);\n  return output;\n}\n\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction rstr2binb(input)\n{\n  var output = Array(input.length >> 2);\n  for(var i = 0; i < output.length; i++)\n    output[i] = 0;\n  for(var i = 0; i < input.length * 8; i += 8)\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n  return output;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2rstr(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length * 32; i += 8)\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\n  return output;\n}\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction binb_sha1(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  var w = Array(80);\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n  var e = -1009589776;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    var olde = e;\n\n    for(var j = 0; j < 80; j++)\n    {\n      if(j < 16) w[j] = x[i + j];\n      else w[j] = bit_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n      var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = bit_rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n  return Array(a, b, c, d, e);\n\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft(t, b, c, d)\n{\n  if(t < 20) return (b & c) | ((~b) & d);\n  if(t < 40) return b ^ c ^ d;\n  if(t < 60) return (b & c) | (b & d) | (c & d);\n  return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t)\n{\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n         (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\nexports.HMACSHA1= function(key, data) {\n  return b64_hmac_sha1(key, data);\n}","map":{"mappings":[{"source":"node_modules/oauth/lib/sha1.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/oauth/lib/sha1.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}}],"sources":{"node_modules/oauth/lib/sha1.js":"/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS 180-1\n * Version 2.2 Copyright Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */\nvar hexcase = 1;  /* hex output format. 0 - lowercase; 1 - uppercase        */\nvar b64pad  = \"=\"; /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nfunction hex_sha1(s)    { return rstr2hex(rstr_sha1(str2rstr_utf8(s))); }\nfunction b64_sha1(s)    { return rstr2b64(rstr_sha1(str2rstr_utf8(s))); }\nfunction any_sha1(s, e) { return rstr2any(rstr_sha1(str2rstr_utf8(s)), e); }\nfunction hex_hmac_sha1(k, d)\n  { return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction b64_hmac_sha1(k, d)\n  { return rstr2b64(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d))); }\nfunction any_hmac_sha1(k, d, e)\n  { return rstr2any(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\n\n/*\n * Perform a simple self-test to see if the VM is working\n */\nfunction sha1_vm_test()\n{\n  return hex_sha1(\"abc\").toLowerCase() == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n}\n\n/*\n * Calculate the SHA1 of a raw string\n */\nfunction rstr_sha1(s)\n{\n  return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data (raw strings)\n */\nfunction rstr_hmac_sha1(key, data)\n{\n  var bkey = rstr2binb(key);\n  if(bkey.length > 16) bkey = binb_sha1(bkey, key.length * 8);\n\n  var ipad = Array(16), opad = Array(16);\n  for(var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = binb_sha1(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n  return binb2rstr(binb_sha1(opad.concat(hash), 512 + 160));\n}\n\n/*\n * Convert a raw string to a hex string\n */\nfunction rstr2hex(input)\n{\n  try { hexcase } catch(e) { hexcase=0; }\n  var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n  var output = \"\";\n  var x;\n  for(var i = 0; i < input.length; i++)\n  {\n    x = input.charCodeAt(i);\n    output += hex_tab.charAt((x >>> 4) & 0x0F)\n           +  hex_tab.charAt( x        & 0x0F);\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to a base-64 string\n */\nfunction rstr2b64(input)\n{\n  try { b64pad } catch(e) { b64pad=''; }\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var output = \"\";\n  var len = input.length;\n  for(var i = 0; i < len; i += 3)\n  {\n    var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i+1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i+2)      : 0);\n    for(var j = 0; j < 4; j++)\n    {\n      if(i * 8 + j * 6 > input.length * 8) output += b64pad;\n      else output += tab.charAt((triplet >>> 6*(3-j)) & 0x3F);\n    }\n  }\n  return output;\n}\n\n/*\n * Convert a raw string to an arbitrary string encoding\n */\nfunction rstr2any(input, encoding)\n{\n  var divisor = encoding.length;\n  var remainders = Array();\n  var i, q, x, quotient;\n\n  /* Convert to an array of 16-bit big-endian values, forming the dividend */\n  var dividend = Array(Math.ceil(input.length / 2));\n  for(i = 0; i < dividend.length; i++)\n  {\n    dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n  }\n\n  /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */\n  while(dividend.length > 0)\n  {\n    quotient = Array();\n    x = 0;\n    for(i = 0; i < dividend.length; i++)\n    {\n      x = (x << 16) + dividend[i];\n      q = Math.floor(x / divisor);\n      x -= q * divisor;\n      if(quotient.length > 0 || q > 0)\n        quotient[quotient.length] = q;\n    }\n    remainders[remainders.length] = x;\n    dividend = quotient;\n  }\n\n  /* Convert the remainders to the output string */\n  var output = \"\";\n  for(i = remainders.length - 1; i >= 0; i--)\n    output += encoding.charAt(remainders[i]);\n\n  /* Append leading zero equivalents */\n  var full_length = Math.ceil(input.length * 8 /\n                                    (Math.log(encoding.length) / Math.log(2)))\n  for(i = output.length; i < full_length; i++)\n    output = encoding[0] + output;\n\n  return output;\n}\n\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */\nfunction str2rstr_utf8(input)\n{\n  var output = \"\";\n  var i = -1;\n  var x, y;\n\n  while(++i < input.length)\n  {\n    /* Decode utf-16 surrogate pairs */\n    x = input.charCodeAt(i);\n    y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n    if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF)\n    {\n      x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n      i++;\n    }\n\n    /* Encode output as utf-8 */\n    if(x <= 0x7F)\n      output += String.fromCharCode(x);\n    else if(x <= 0x7FF)\n      output += String.fromCharCode(0xC0 | ((x >>> 6 ) & 0x1F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0xFFFF)\n      output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n    else if(x <= 0x1FFFFF)\n      output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                                    0x80 | ((x >>> 12) & 0x3F),\n                                    0x80 | ((x >>> 6 ) & 0x3F),\n                                    0x80 | ( x         & 0x3F));\n  }\n  return output;\n}\n\n/*\n * Encode a string as utf-16\n */\nfunction str2rstr_utf16le(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode( input.charCodeAt(i)        & 0xFF,\n                                  (input.charCodeAt(i) >>> 8) & 0xFF);\n  return output;\n}\n\nfunction str2rstr_utf16be(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length; i++)\n    output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                                   input.charCodeAt(i)        & 0xFF);\n  return output;\n}\n\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nfunction rstr2binb(input)\n{\n  var output = Array(input.length >> 2);\n  for(var i = 0; i < output.length; i++)\n    output[i] = 0;\n  for(var i = 0; i < input.length * 8; i += 8)\n    output[i>>5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);\n  return output;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2rstr(input)\n{\n  var output = \"\";\n  for(var i = 0; i < input.length * 32; i += 8)\n    output += String.fromCharCode((input[i>>5] >>> (24 - i % 32)) & 0xFF);\n  return output;\n}\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction binb_sha1(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  var w = Array(80);\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n  var e = -1009589776;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    var olde = e;\n\n    for(var j = 0; j < 80; j++)\n    {\n      if(j < 16) w[j] = x[i + j];\n      else w[j] = bit_rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);\n      var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = bit_rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n  return Array(a, b, c, d, e);\n\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft(t, b, c, d)\n{\n  if(t < 20) return (b & c) | ((~b) & d);\n  if(t < 40) return b ^ c ^ d;\n  if(t < 60) return (b & c) | (b & d) | (c & d);\n  return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t)\n{\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n         (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\nexports.HMACSHA1= function(key, data) {\n  return b64_hmac_sha1(key, data);\n}"},"lineCount":334}},"hash":"f4a6a1cd32a0fd56c695a7095e00d330","cacheData":{"env":{}}}