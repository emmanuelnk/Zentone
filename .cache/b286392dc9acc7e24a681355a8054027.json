{"dependencies":[{"name":"/Users/terminallychill/Sites/zentone/package.json","includedInParent":true,"mtime":1524394439205},{"name":"/Users/terminallychill/Sites/zentone/node_modules/buffer-writer/package.json","includedInParent":true,"mtime":1455554644000},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n//binary data writer tuned for creating\n//postgres message packets as effeciently as possible by reusing the\n//same buffer to avoid memcpy and limit memory allocations\nvar Writer = module.exports = function(size) {\n  this.size = size || 1024;\n  this.buffer = Buffer(this.size + 5);\n  this.offset = 5;\n  this.headerPosition = 0;\n};\n\n//resizes internal buffer if not enough size left\nWriter.prototype._ensure = function(size) {\n  var remaining = this.buffer.length - this.offset;\n  if(remaining < size) {\n    var oldBuffer = this.buffer;\n    // exponential growth factor of around ~ 1.5\n    // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n    var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;\n    this.buffer = new Buffer(newSize);\n    oldBuffer.copy(this.buffer);\n  }\n};\n\nWriter.prototype.addInt32 = function(num) {\n  this._ensure(4);\n  this.buffer[this.offset++] = (num >>> 24 & 0xFF);\n  this.buffer[this.offset++] = (num >>> 16 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  8 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  0 & 0xFF);\n  return this;\n};\n\nWriter.prototype.addInt16 = function(num) {\n  this._ensure(2);\n  this.buffer[this.offset++] = (num >>>  8 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  0 & 0xFF);\n  return this;\n};\n\n//for versions of node requiring 'length' as 3rd argument to buffer.write\nvar writeString = function(buffer, string, offset, len) {\n  buffer.write(string, offset, len);\n};\n\n//overwrite function for older versions of node\nif(Buffer.prototype.write.length === 3) {\n  writeString = function(buffer, string, offset, len) {\n    buffer.write(string, offset);\n  };\n}\n\nWriter.prototype.addCString = function(string) {\n  //just write a 0 for empty or null strings\n  if(!string) {\n    this._ensure(1);\n  } else {\n    var len = Buffer.byteLength(string);\n    this._ensure(len + 1); //+1 for null terminator\n    writeString(this.buffer, string, this.offset, len);\n    this.offset += len;\n  }\n\n  this.buffer[this.offset++] = 0; // null terminator\n  return this;\n};\n\nWriter.prototype.addChar = function(c) {\n  this._ensure(1);\n  writeString(this.buffer, c, this.offset, 1);\n  this.offset++;\n  return this;\n};\n\nWriter.prototype.addString = function(string) {\n  string = string || \"\";\n  var len = Buffer.byteLength(string);\n  this._ensure(len);\n  this.buffer.write(string, this.offset);\n  this.offset += len;\n  return this;\n};\n\nWriter.prototype.getByteLength = function() {\n  return this.offset - 5;\n};\n\nWriter.prototype.add = function(otherBuffer) {\n  this._ensure(otherBuffer.length);\n  otherBuffer.copy(this.buffer, this.offset);\n  this.offset += otherBuffer.length;\n  return this;\n};\n\nWriter.prototype.clear = function() {\n  this.offset = 5;\n  this.headerPosition = 0;\n  this.lastEnd = 0;\n};\n\n//appends a header block to all the written data since the last\n//subsequent header or to the beginning if there is only one data block\nWriter.prototype.addHeader = function(code, last) {\n  var origOffset = this.offset;\n  this.offset = this.headerPosition;\n  this.buffer[this.offset++] = code;\n  //length is everything in this packet minus the code\n  this.addInt32(origOffset - (this.headerPosition+1));\n  //set next header position\n  this.headerPosition = origOffset;\n  //make space for next header\n  this.offset = origOffset;\n  if(!last) {\n    this._ensure(5);\n    this.offset += 5;\n  }\n};\n\nWriter.prototype.join = function(code) {\n  if(code) {\n    this.addHeader(code, true);\n  }\n  return this.buffer.slice(code ? 0 : 5, this.offset);\n};\n\nWriter.prototype.flush = function(code) {\n  var result = this.join(code);\n  this.clear();\n  return result;\n};\n","map":{"mappings":[{"source":"node_modules/buffer-writer/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/buffer-writer/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}}],"sources":{"node_modules/buffer-writer/index.js":"//binary data writer tuned for creating\n//postgres message packets as effeciently as possible by reusing the\n//same buffer to avoid memcpy and limit memory allocations\nvar Writer = module.exports = function(size) {\n  this.size = size || 1024;\n  this.buffer = Buffer(this.size + 5);\n  this.offset = 5;\n  this.headerPosition = 0;\n};\n\n//resizes internal buffer if not enough size left\nWriter.prototype._ensure = function(size) {\n  var remaining = this.buffer.length - this.offset;\n  if(remaining < size) {\n    var oldBuffer = this.buffer;\n    // exponential growth factor of around ~ 1.5\n    // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n    var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;\n    this.buffer = new Buffer(newSize);\n    oldBuffer.copy(this.buffer);\n  }\n};\n\nWriter.prototype.addInt32 = function(num) {\n  this._ensure(4);\n  this.buffer[this.offset++] = (num >>> 24 & 0xFF);\n  this.buffer[this.offset++] = (num >>> 16 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  8 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  0 & 0xFF);\n  return this;\n};\n\nWriter.prototype.addInt16 = function(num) {\n  this._ensure(2);\n  this.buffer[this.offset++] = (num >>>  8 & 0xFF);\n  this.buffer[this.offset++] = (num >>>  0 & 0xFF);\n  return this;\n};\n\n//for versions of node requiring 'length' as 3rd argument to buffer.write\nvar writeString = function(buffer, string, offset, len) {\n  buffer.write(string, offset, len);\n};\n\n//overwrite function for older versions of node\nif(Buffer.prototype.write.length === 3) {\n  writeString = function(buffer, string, offset, len) {\n    buffer.write(string, offset);\n  };\n}\n\nWriter.prototype.addCString = function(string) {\n  //just write a 0 for empty or null strings\n  if(!string) {\n    this._ensure(1);\n  } else {\n    var len = Buffer.byteLength(string);\n    this._ensure(len + 1); //+1 for null terminator\n    writeString(this.buffer, string, this.offset, len);\n    this.offset += len;\n  }\n\n  this.buffer[this.offset++] = 0; // null terminator\n  return this;\n};\n\nWriter.prototype.addChar = function(c) {\n  this._ensure(1);\n  writeString(this.buffer, c, this.offset, 1);\n  this.offset++;\n  return this;\n};\n\nWriter.prototype.addString = function(string) {\n  string = string || \"\";\n  var len = Buffer.byteLength(string);\n  this._ensure(len);\n  this.buffer.write(string, this.offset);\n  this.offset += len;\n  return this;\n};\n\nWriter.prototype.getByteLength = function() {\n  return this.offset - 5;\n};\n\nWriter.prototype.add = function(otherBuffer) {\n  this._ensure(otherBuffer.length);\n  otherBuffer.copy(this.buffer, this.offset);\n  this.offset += otherBuffer.length;\n  return this;\n};\n\nWriter.prototype.clear = function() {\n  this.offset = 5;\n  this.headerPosition = 0;\n  this.lastEnd = 0;\n};\n\n//appends a header block to all the written data since the last\n//subsequent header or to the beginning if there is only one data block\nWriter.prototype.addHeader = function(code, last) {\n  var origOffset = this.offset;\n  this.offset = this.headerPosition;\n  this.buffer[this.offset++] = code;\n  //length is everything in this packet minus the code\n  this.addInt32(origOffset - (this.headerPosition+1));\n  //set next header position\n  this.headerPosition = origOffset;\n  //make space for next header\n  this.offset = origOffset;\n  if(!last) {\n    this._ensure(5);\n    this.offset += 5;\n  }\n};\n\nWriter.prototype.join = function(code) {\n  if(code) {\n    this.addHeader(code, true);\n  }\n  return this.buffer.slice(code ? 0 : 5, this.offset);\n};\n\nWriter.prototype.flush = function(code) {\n  var result = this.join(code);\n  this.clear();\n  return result;\n};\n"},"lineCount":131}},"hash":"f95163a4a4ad75c1847bdcc26886f4f8","cacheData":{"env":{}}}