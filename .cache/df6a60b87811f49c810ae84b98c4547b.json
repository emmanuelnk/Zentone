{"dependencies":[{"name":"/Users/terminallychill/Sites/zentone/package.json","includedInParent":true,"mtime":1524394439205},{"name":"/Users/terminallychill/Sites/zentone/node_modules/pgpass/package.json","includedInParent":true,"mtime":1495364507000},{"name":"path","loc":{"line":3,"column":19}},{"name":"fs","loc":{"line":4,"column":17}},{"name":"./helper.js","loc":{"line":5,"column":21}}],"generated":{"js":"'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n","map":{"mappings":[{"source":"node_modules/pgpass/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pgpass/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"node_modules/pgpass/lib/index.js":"'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n"},"lineCount":24}},"hash":"fa0441f246357a0f524b877c95be41f0","cacheData":{"env":{}}}