{"dependencies":[{"name":"/Users/terminallychill/Sites/zentone/package.json","includedInParent":true,"mtime":1524394439205},{"name":"/Users/terminallychill/Sites/zentone/node_modules/pg-connection-string/package.json","includedInParent":true,"mtime":1411766566000},{"name":"url","loc":{"line":3,"column":18}}],"generated":{"js":"'use strict';\n\nvar url = require('url');\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  var config;\n  //unix socket\n  if(str.charAt(0) === '/') {\n    config = str.split(' ');\n    return { host: config[0], database: config[1] };\n  }\n  // url parse expects spaces encoded as %20\n  if(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\n    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, \"%$1\");\n  }\n  var result = url.parse(str, true);\n  config = {};\n\n  if (result.query.application_name) {\n    config.application_name = result.query.application_name;\n  }\n  if (result.query.fallback_application_name) {\n    config.fallback_application_name = result.query.fallback_application_name;\n  }\n\n  config.port = result.port;\n  if(result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname);\n    config.database = result.query.db;\n    config.client_encoding = result.query.encoding;\n    return config;\n  }\n  config.host = result.hostname;\n\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  var pathname = result.pathname;\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = result.pathname.slice(1) || null;\n  }\n  config.database = pathname && decodeURI(pathname);\n\n  var auth = (result.auth || ':').split(':');\n  config.user = auth[0];\n  config.password = auth.splice(1).join(':');\n\n  var ssl = result.query.ssl;\n  if (ssl === 'true' || ssl === '1') {\n    config.ssl = true;\n  }\n\n  return config;\n}\n\nmodule.exports = {\n  parse: parse\n};\n","map":{"mappings":[{"source":"node_modules/pg-connection-string/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/pg-connection-string/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"node_modules/pg-connection-string/index.js":"'use strict';\n\nvar url = require('url');\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  var config;\n  //unix socket\n  if(str.charAt(0) === '/') {\n    config = str.split(' ');\n    return { host: config[0], database: config[1] };\n  }\n  // url parse expects spaces encoded as %20\n  if(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\n    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, \"%$1\");\n  }\n  var result = url.parse(str, true);\n  config = {};\n\n  if (result.query.application_name) {\n    config.application_name = result.query.application_name;\n  }\n  if (result.query.fallback_application_name) {\n    config.fallback_application_name = result.query.fallback_application_name;\n  }\n\n  config.port = result.port;\n  if(result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname);\n    config.database = result.query.db;\n    config.client_encoding = result.query.encoding;\n    return config;\n  }\n  config.host = result.hostname;\n\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  var pathname = result.pathname;\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = result.pathname.slice(1) || null;\n  }\n  config.database = pathname && decodeURI(pathname);\n\n  var auth = (result.auth || ':').split(':');\n  config.user = auth[0];\n  config.password = auth.splice(1).join(':');\n\n  var ssl = result.query.ssl;\n  if (ssl === 'true' || ssl === '1') {\n    config.ssl = true;\n  }\n\n  return config;\n}\n\nmodule.exports = {\n  parse: parse\n};\n"},"lineCount":63}},"hash":"91f08a7be099b1e5ae44c9cc343203e7","cacheData":{"env":{}}}